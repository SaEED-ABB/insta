create table "questions"(
    id         serial primary key,
    context    varchar unique not null
);


create type "user_type" as enum ('user', 'admin', 'analyst');


create table "users"(
    id              serial primary key,
    email           varchar unique not null,
    username        varchar unique not null,
    password        varchar not null,
    type            user_type not null,
    question_id     int references questions(id) not null,
    answer          varchar not null,
    bio             varchar
);


create table "posts"(
    id              serial primary key,
    date            timestamp not null default current_timestamp,
    context         text not null,
    user_id         int references users(id) not null,
    hash_tags_count int not null,
    unique (context, user_id)
);


create table "comments"(
    id          serial primary key,
    date        timestamp not null default current_timestamp,
    context     text not null,
    post_id     int references posts(id) not null,
    user_id     int references users(id) not null,
    parent_id   int references comments(id),
    unique (context, post_id, user_id)
);


create table "posts_likes"(
    id          serial primary key,
    post_id     int references posts(id) not null,
    user_id     int references users(id) not null,
    unique (post_id, user_id)
);


create table "comments_likes"(
    id          serial primary key,
    comment_id  int references comments(id) not null,
    user_id     int references users(id) not null,
    unique (comment_id, user_id)
);


create table "follows"(
    id                  serial primary key,
    date                timestamp not null default current_timestamp,
    user_id             int references users(id) not null,
    following_user_id   int references users(id) not null constraint self_like_loop check (following_user_id <> user_id),
    unique (user_id, following_user_id)
);


create table "blocks"(
    id                  serial primary key,
    date                timestamp not null default current_timestamp,
    user_id             int references users(id) not null,
    blocked_user_id     int references users(id) not null constraint self_block_loop check (blocked_user_id <> user_id),
    unique (user_id, blocked_user_id)
);


create table "hash_tags"(
    id          serial primary key,
    hash_tag    varchar not null,
    post_id     int references posts(id) not null
);
